%span.btn.btn-success.fileinput-button
  %i.glyphicon.glyphicon-plus
  %span Add files...
  %input{:id => "fileupload", :name => "files[]", :multiple => "", :type => "file"}

%div#progress.progress
  %div.progress-bar.progress-bar-success

%div#files.files

  - @files.each do |f|
    = render 'files/file', file: f

:javascript
  /*jslint unparam: true, regexp: true */
  /*global window, $ */
  $(function () {
      'use strict';
      // Change this to the location of your server-side upload handler:
      var url = '#{pdf_files_path}';
      var uploadButton = $('<button/>')
          .addClass('btn btn-primary btn--small btn--grey')
          .prop('disabled', true)
          .text('Processing...')
          .on('click', function () {
              var $this = $(this),
                  data = $this.data();
              $this
                  .off('click')
                  .text('Abort')
                  .on('click', function () {
                      $this.remove();
                      data.abort();
                  });
              data.submit().always(function () {
                  $this.remove();
              });
          });
      $('#fileupload').fileupload({
          url: url,
          dataType: 'json',
          autoUpload: false,
          acceptFileTypes: /(\.|\/)(pdf)$/i,
          maxFileSize: 25000000, // 25 MB
          disableImageResize: true,
          previewCrop: false
      }).on('fileuploadadd', function (e, data) {
          data.context = $("<div class='card card--file file file--pdf media'/>").appendTo('#files');
          $.each(data.files, function (index, file) {
              var media      = $('<div class="media"/>');
              var icon       = $('<img height="20" width="20" class="media__img"/>')
                               .attr('src', '#{image_path("pdf_icon.png")}')
                               .appendTo(media);
              var media_body = $('<div class="media_body"/>');
              var header     = $('<header class="card__header">')
                               .append($('<h1/>').text(file.name))
                               .appendTo(media_body);
              var card_body  = $('<div class="card__body">')
                .append("<ul><li><a href='javascript://' class='btn btn--small btn--grey js-rename-file'>Rename File</a></li><li><a href='javascript://' class='btn btn--small btn--grey js-new-contract-from-file'>New Contract from File</a></li><li><a href='javascript://' class='btn btn--small btn--grey js-add-to-contract'>Add to Contract</a></li></ul>")
              if (!index) { // upload this new file
                media.append(media_body)
                     .append('<br>')
                     .append(uploadButton.clone(true).data(data));
              }
              else { // this file has been uploaded
                card_body.appendTo(media_body);
                media.append(media_body)
              }
              media.appendTo(data.context);
          });
      }).on('fileuploadprocessalways', function (e, data) {
          var index = data.index,
              file = data.files[index],
              node = $(data.context.children()[index]);
          if (file.preview) {
              node
                  .prepend('<br>')
                  .prepend(file.preview);
          }
          if (file.error) {
              node
                  .append('<br>')
                  .append($('<span class="text-danger"/>').text(file.error));
          }
          if (index + 1 === data.files.length) {
              data.context.find('button')
                  .text('Upload')
                  .prop('disabled', !!data.files.error);
          }
      }).on('fileuploadprogressall', function (e, data) {
          var progress = parseInt(data.loaded / data.total * 100, 10);
          $('#progress .progress-bar').css(
              'width',
              progress + '%'
          );
      }).on('fileuploaddone', function (e, data) {
          $.each(data.result.files, function (index, file) {
              if (file.id) {
                $(data.context.children()[index]).parent().attr('data-id', file.id);
              } else if (file.error) {
                var error = $('<span class="text-danger"/>').text(file.error);
                $(data.context.children()[index])
                  .append('<br>')
                  .append(error);
              }
          });
      }).on('fileuploadfail', function (e, data) {
          $.each(data.files, function (index, file) {
              var error = $('<span class="text-danger"/>').text('File upload failed.');
              $(data.context.children()[index])
                  .append('<br>')
                  .append(error);
          });
      }).prop('disabled', !$.support.fileInput)
          .parent().addClass($.support.fileInput ? undefined : 'disabled');
  });
